{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACrE,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAGrF,IAAI;AACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;AAGxC,IAAI;AACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACvD,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,yBAAyB,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAGlE,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAChD,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,eAAe,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAEnD,IAAI;AACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAC3E,KAAK,CAAC,mBAAmB,EAAE,CAAC;AAC5B,KAAK,CAAC,WAAW,EAAE,CAAC;AAEpB,IAAI;AACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACjD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAC;AAEvD,MAAM,YAAY,GAAG,oBAAoB,CAAC,EAAE,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import { capitalize, reverseString } from './modules/stringUtils.js';\r\nimport { Finance } from './modules/finance.js';\r\nimport { UserManagement } from './modules/userManagement.js';\r\nimport { generateFibonacci, generatePrimeNumbers } from './modules/sequenceUtils.js';\r\n\r\n\r\n// 1\r\nconsole.log('Task 1');\r\nconsole.log(capitalize('apollo440'));\r\nconsole.log(reverseString('apollo440'));\r\n\r\n\r\n// 2\r\nconsole.log('Task 2');\r\nconst loan = new Finance.LoanCalculator(10000, 12, 12);\r\nconst monthlyPayment = loan.calculateMonthlyPayment();\r\nconsole.log(`Monthly loan payment: ${monthlyPayment.toFixed(2)}`);\r\n\r\n\r\nconst tax = new Finance.TaxCalculator(5000, 10);\r\nconst taxAmount = tax.calculateTax();\r\nconsole.log(`Tax amount: ${taxAmount.toFixed(2)}`);\r\n\r\n// 3\r\nconsole.log('Task 3');\r\nconst admin = new UserManagement.Admin.AdminUser('Michael', 'm@gmail.com');\r\nadmin.promoteToSuperAdmin();\r\nadmin.backToAdmin();\r\n\r\n// 4\r\nconsole.log('Task 4');\r\nconst fibonacciSequence = generateFibonacci(150);\r\nconsole.log('Fibonacci up to 150:', fibonacciSequence);\r\n\r\nconst primeNumbers = generatePrimeNumbers(20);\r\nconsole.log('Primes up to20:', primeNumbers);"]}